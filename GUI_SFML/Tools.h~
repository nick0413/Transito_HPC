#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <boost/algorithm/string.hpp>
#include "Contenedor.h"

using namespace std;

class Tools{

 public:
  bool infoContenedores(string &,vector<vector<string>> &);
  bool vectorContenedores(string &, vector<Contenedor> &);
  
};


bool Tools::vectorContenedores(string & fileInfContenedores , vector<Contenedor> & vectorContenedores){

  vector<vector<string>> infoContenedores;
  // Verifica que se carguen los datos
  if(!infoContenedores(fileInfContenedores,infoContenedores)){
    return false;
  }

  for(int i=1;i<infoContenedores.size();i++){      
    // Se le coloca el nombre
    Contenedor auxContenedor(infoContenedores[i,0]);
    // Se configura la posición
    float posX=stof(infoContenedores[i,1]);
    float posY=stof(infoContenedores[i,2]);
    auxContenedor.setPosition(posX,posY);
    // Configuración del radio
    float radius=stof(infoContenedores[i,3]);
    auxContenedor.setRadius(radius);
    // Configuración del color
    switch(infoContenedores[i,4]){
    case "red" :
      auxContenedor.setFillColor(sf::Color::Red);
      break;
    default :
      auxContenedor.setFillColor(sf::Color::Green);
      break;
    }

    vectorContenedores.push_back(auxContenedor);      
      
      
  }

  return true;
}


// https://java2blog.com/read-csv-file-in-cpp/
bool Tools::infoContenedores(string &fname,vector<vector<string>> &content){
  vector <string> row;
  string line,word;
  fstream file (fname,ios::in);	// ios::in es para leer
  if(file.is_open()){

    while(getline(file,line)){

      row.clear();
      stringstream str(line); 	// Para extraer cada campo

      while(getline(str,word,',')){
	// https://www.geeksforgeeks.org/boosttrim-in-cpp-library/
	boost::algorithm::trim(word);
	row.push_back(word);
      }
      content.push_back(row);
    }
  }
  else {
    return false;
  }

  return true;
  
}




